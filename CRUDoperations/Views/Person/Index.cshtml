
@model  IEnumerable<PersonResponse>
@{
    ViewBag.Title = "Persons";
}

<form action="~/persons/index" method="get">
<h1>Persons</h1>
<a href="~/persons/create" asp-action="Index" >Create Person</a>
<a href="~/persons/PersonsPDF">Download as PDF</a>
@*<a asp-controller="Persons" asp-action="PersonsPDF">Download as PDF</a>*@
<div class="box flex">
    <div class="flex-1">
        <select class="form-input" name="searchBy">
            @foreach (var field in ViewBag.SearchFields)
            {
                    if(field.Key == ViewBag.CurrentSearchBy)
                    {
                        <option value="@field.Key" selected="selected">@field.Value</option>
                    }else{
                        <option value="@field.Key">@field.Value</option>
                    }
            }
        </select>
    </div>
     <div class="flex-1">
         <input type="search" id="Search" class="form-input" name="searchText" placeholder="Search" value="@ViewBag.CurrentSearchText"/>
     </div>
      <div class="flex-1">
          <button class="button button-blue-back">Search</button>
          <a href="~/persons/index" class="link-hover">Clear all</a>
      </div>
</div>


<table class="table w-100 mt">
    <thead>
        <tr>
            @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData){
                {"ColumnName", nameof(PersonResponse.PersonName)},
                {"DisplayName", @ViewBag.SearchFields[nameof(PersonResponse.PersonName)]}
            })
             @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData){
                {"ColumnName", nameof(PersonResponse.Email)},
                {"DisplayName", @ViewBag.SearchFields[nameof(PersonResponse.Email)]}
            })
             @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData){
                {"ColumnName", nameof(PersonResponse.DateOfBirth)},
                {"DisplayName", @ViewBag.SearchFields[nameof(PersonResponse.DateOfBirth)]}
            })
            @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData){
                {"ColumnName", nameof(PersonResponse.Age)},
                {"DisplayName", @ViewBag.SearchFields[nameof(PersonResponse.Age)]}
            })
            @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData){
                {"ColumnName", nameof(PersonResponse.Gender)},
                {"DisplayName", @ViewBag.SearchFields[nameof(PersonResponse.Gender)]}
            })
              @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData){
                {"ColumnName", nameof(PersonResponse.Country)},
                {"DisplayName", @ViewBag.SearchFields[nameof(PersonResponse.CountryId)]}
            })
              @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData){
                {"ColumnName", nameof(PersonResponse.Address)},
                {"DisplayName", @ViewBag.SearchFields[nameof(PersonResponse.Address)]}
            })
              @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData){
                {"ColumnName", nameof(PersonResponse.ReceiveNewsLetters)},
                {"DisplayName", @ViewBag.SearchFields[nameof(PersonResponse.ReceiveNewsLetters)]}
            })
            @*<th>Email</th>*@
            @*<th>Date of Birth</th>*@
            @*<th>Age</th> *@
            @*<th>Gender</th>*@
            @*<th>Country</th> *@
            @*<th>Address</th>*@
             
        </tr>
    </thead>
    <tbody>
        @foreach (PersonResponse person in Model)
        {
            <tr>
                <td>@person.PersonName</td>
                <td>@person.Email</td>
                <td>@person.DateOfBirth?.ToString("dd MMM yyyy")</td>
                <td>@person.Age</td>
                <td>@person.Gender</td>
                <td>@person.Country</td>
                <td>@person.Address</td>
                <td>@person.ReceiveNewsLetters</td>
            </tr>
        }
    </tbody>
</table>
</form>